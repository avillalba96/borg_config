#!/usr/bin/env bash
#      __                _         _____   ____    __
#     / /   __  ______  (_)  __   / ___/  / __ \  / /
#    / /   / / / / __ \/ / |/_/   \__ \  / /_/ / / /
#   / /___/ /_/ / / / / />  <    ___/ / / _, _/ / /____
#  /_____/\__,_/_/ /_/_/_/|_|   /____(_)_/ |_(_)_____(_)
#
# Creado por Pablo Ramos
# Modificado por Alejandro Villalba
#
# Dependencies:
# borgbackup (https://github.com/borgbackup/borg)

ERROR=0

#Colores de texto
BOLD=$(tput bold)
NORMAL=$(tput sgr0)
RED=$(tput setaf 1)
YELLOW=$(tput setaf 3)

#Variables de borg
ENCRYPTION="repokey-blake2"
DIRBASE="/u/borgbackup/"
DIRCONFIG="/etc/lunix/borg/client"
BORGUSER="borg"

#Preferentemente configurar la variable SERVER con una IP fija.
#Si no obtener IP principal del servidor local.
#Esta IP no se utiliza en este script, se utiliza en el script del cliente
SERVER=$(hostname -I | awk '{print $1}')
#Puerto para conexión SSH desde los clientes
CHECKPORT=$(grep Port /etc/ssh/sshd_config | grep -v "#" | wc -l)
if [ $CHECKPORT -eq 0 ]; then
    PORT="22"
else
    PORT=$(grep Port /etc/ssh/sshd_config | grep -v "#" | awk '{print $2}')
fi


main() {

    #Comprobar que este instalado borg
    BORG=$(command -v borg)
    [[ ${#BORG} -eq 0 ]] && echo "${RED}Es necesario instalar borgbackup" && exit

    #Si no se ingreso el nombre de cliente, ingresar uno
    if [ -z ${CLIENT+x} ]; then
        echo "Ingrese FQDN del cliente:"
        read -r CLIENT
    fi
    #Si no se ingreso un directorio. usar el por defecto
    if [ -z ${DIRREPO+x} ]; then
        DIRREPO=$DIRBASE$CLIENT
    fi

    #Comprobamos que no exista el repositorio ni la llave
    #Comprobar tambien si existen archivos .pass y .key ?
    if [ -e $DIRCONFIG/.ssh/"$CLIENT" ]; then
        echo "${RED}Ya existe la llave SSH $DIRCONFIG/.ssh/$CLIENT"
        ERROR=1
    fi
    if [ -e "$DIRREPO" ]; then
        echo "${RED}Ya existe el repositorio $DIRREPO"
        ERROR=1
    fi
    if [ ! -e $DIRCONFIG/borgcron.conf.template ]; then
        echo "${RED}No existe la configuración base para cliente en $DIRCONFIG/borgcron.conf.template"
        ERROR=1
    fi

    #Si alguno de los chequeos anterior dio error, salir del script
    if [ $ERROR = 1 ]; then
        echo "${NORMAL}"
        echo "Se detuvo el script sin generar ninguna configuracion"
        echo "Corregir argumentos y volver a ejecutar."
        exit
    fi

    #Generar carpeta de configuracion si no existe
    if [ ! -e $DIRCONFIG/ ]; then
        mkdir $DIRCONFIG/
        mkdir $DIRCONFIG/.ssh/
        chmod -R 600 $DIRCONFIG/
    fi

    #Generar nueva llave SSH para el cliente
    echo "Generando llave ssh y configuracion de cliente..."
    ssh-keygen -t rsa -b 4096 -C "$CLIENT" -f $DIRCONFIG/.ssh/"$CLIENT" -q -N ""
    PUBKEY=$(cat $DIRCONFIG/.ssh/"$CLIENT".pub)

    #Habilitar acceso al repositorio con la nueva llave
    echo "#$CLIENT" >>/home/$BORGUSER/.ssh/authorized_keys
    echo "command=\"borg serve --append-only --restrict-to-path $DIRREPO/\",no-pty,no-agent-forwarding,no-port-forwarding,no-X11-forwarding,no-user-rc $PUBKEY" >>/home/$BORGUSER/.ssh/authorized_keys

    #Copia de authorized_keys
    echo "#$CLIENT" >>$DIRCONFIG/.ssh/authorized_keys
    echo "command=\"borg serve --append-only --restrict-to-path $DIRREPO/\",no-pty,no-agent-forwarding,no-port-forwarding,no-X11-forwarding,no-user-rc $PUBKEY" >>$DIRCONFIG/.ssh/authorized_keys

    #Generamos una passphrase random y la guardamos
    PASS=$(openssl rand -base64 24)
    echo "Utilizar passphrase: ${YELLOW}$PASS"
    echo "${NORMAL}Si se utiliza otro passphrase, es necesario despues modificar la configuración del cliente"
    echo "$PASS" >$DIRCONFIG/"$CLIENT".pass

    #Creamos el repositorio como el usuario que se va a utilizar para la conexion remota
    su - $BORGUSER -c "borg init -e=$ENCRYPTION $DIRREPO"

    #Guardamos la key
    borg key export "$DIRREPO" $DIRCONFIG/"$CLIENT".key

    #Generamos script basico para cliente
    sed s/SRV_VAR/"$SERVER"/g $DIRCONFIG/borgcron.conf.template >$DIRCONFIG/"$CLIENT".conf
    sed -i s\#DIR_VAR\#"$DIRREPO"\#g $DIRCONFIG/"$CLIENT".conf
    sed -i s\#PORT_VAR\#$PORT\#g $DIRCONFIG/"$CLIENT".conf
    sed -i s\#PASS_VAR\#"$PASS"\#g $DIRCONFIG/"$CLIENT".conf
    sed -i s\#CLIENT_VAR\#"$CLIENT"\#g $DIRCONFIG/"$CLIENT".conf

    #Instrucciones para cliente (en nuestro storage se edito LOCAL => LUNIX)
    clear
    echo ""
    echo ""
    echo "${NORMAL} ${BOLD}"
    echo "Instalación en cliente:"
    echo ""
    echo "1) Copiar totalmente todo el texto de -ABAJO- y pegarlo en el equipo cliente"
    echo ""
    echo "${RED} ${BOLD}"
    echo "====================="
    echo "${NORMAL}"
    echo ""
    KEY00=$(cat $DIRCONFIG/.ssh/$CLIENT)
    echo "cat >> /root/.ssh/$CLIENT-LOCAL << EOF
$KEY00
EOF"
    echo "chmod 600 /root/.ssh/$CLIENT-LOCAL"
    echo "cat >> /root/.ssh/config << EOF
Host $SERVER
  User borg
  IdentityFile /root/.ssh/$CLIENT-LOCAL
EOF"
    CONF00=$(cat $DIRCONFIG/$CLIENT.conf)
    echo "cat >> /etc/lunix/borg/borgcron-local.conf << EOF
$CONF00
EOF"
    echo ""
    echo "${RED} ${BOLD}"
    echo "====================="
    echo "${NORMAL} ${BOLD}"
    echo ""
    echo "Instalación en cliente:"
    echo ""
    echo "1) Copiar totalmente todo el texto de -ARRIBA- y pegarlo en el equipo cliente"
    echo "${NORMAL}"
    echo ""
    echo ""

}

#Correr funcion main
main
